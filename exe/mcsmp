#!/usr/bin/env ruby
# frozen_string_literal: true

require 'mcsmp'
require 'thor'
autoload :MCSMP, 'lib/mcsmp'

# The main CLI
class MCSMPCLI < Thor
  desc 'run PATH', 'Run a MineCraft instance at the target PATH'
  def run_server(path = File.absolute_path(Dir.pwd))
    instance = MCSMP::ServerInstance.from_existing(path)
    runner = MCSMP::ServerRunner.new(instance)
    runner.start_sync
  end

  desc 'start_connector PATH', 'Start the connector at the target folder'
  method_option :pry, type: :boolean, aliases: '-P',
                      desc: 'Additionally start a pry instance'
  method_option :key, aliases: '-k', desc: 'Set the connection secret'
  method_option :port, aliases: '-p', desc: 'Set the connector port'
  method_option :host, aliases: '-h', desc: 'Set the connector host'
  method_option :not_local, type: :boolean, aliases: '-l',
                            desc: 'run with authentication'
  method_option :no_autostart, type: :boolean, desc: 'Disable server autostarting'
  def start_connector(path = File.absolute_path(Dir.pwd))
    config = MCSMP::ConnectorConfig.new
    config_from_options(config, options)
    config.path = File.absolute_path(path)
    puts config.connection_secret unless options[:key] || config.is_local
    MCSMP::Connector.instance.config = config
    no_autostart = options[:no_autostart] || false
    with_pry = options[:pry] || false
    MCSMP::Connector.instance.load_connector(autostart: !no_autostart, with_pry: with_pry)
  end

  private

  def config_from_options(config, options)
    config.port =               options[:port]     if options[:port]
    config.host =               options[:host]     if options[:host]
    config.connection_secret =  options[:key]      if options[:key]
    config.is_local          = !options[:not_local] if options[:not_local]
  end
end

MCSMPCLI.start
